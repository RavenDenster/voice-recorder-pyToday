import wave
import os
import time
import threading
import tkinter
import pyaudio

class VoiceRecorder():

    def __init__(self): # –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.root = tkinter.Tk() # —Å–æ–∑–¥–∞—ë–º –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.root.resizable(True, False)
        self.button = tkinter.Button(
            text='üéô',
            font={'Arial', 220, 'bold'},
            command=self.click_handler # –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å –∑–≤—É–∫–∞
        )
        self.button.pack()
        self.label = tkinter.Label(text='00:00:00')
        self.label.pack() # –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–∂–µ—Ç–æ–≤
        self.recording = False # –∏–¥—ë—Ç –∑–∞–ø–∏—Å—å –∏–ª–∏ –Ω–µ—Ç
        self.root.mainloop()

    def click_handler(self): # —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
        if self.recording:
            self.recording = False
        else:
            self.recording = True
            threading.Thread(target=self.record).start() # –∑–∞–ø—É—Å–∫–∞–µ–º –º–µ—Ç–æ–¥ record

    def record(self): # –∑–∞–ø–∏—Å—ã–≤–∞—Ç –∑–≤—É–∫ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
        audio = pyaudio.PyAudio()
        stream = audio.open(
                format=pyaudio.paInt16,
                channels=1,
                rate=44100,
                input=True,
                frames_per_buffer=1024
        )

        frames = []
        start = time.time()

        while self.recording:
            data = stream.read(1024, exception_on_overflow=False)
            frames.append(data)

            passed = time.time() - start
            secs = passed % 60
            mins = passed // 60
            hours = mins // 60
            self.label.config(text=f'{int(hours):02d}:{int(mins):02d}:{int(secs):02d}') # –º–µ–Ω—è–µ–º –≤—Ä–µ–º—è –Ω–∞ –∫–∞–∂–¥–æ–π —Ç–∏–µ—Ä–∞—Ü–∏–∏

        stream.stop_stream()
        stream.close()
        audio.terminate()

        exists = True
        i = 1

        while exists:
            if os.path.exists(f'recording{i}.wav'):
                i += 1
            else:
                exists = False

        sound_file = wave.open(f'recording{i}.wav', 'wb') # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –Ω–∞ –∑–∞–ø–∏—Å—å
        sound_file.setnchannels(1)
        sound_file.setsampwidth(audio.get_sample_size(pyaudio.paInt16))
        sound_file.setframerate(44100)
        sound_file.writeframes(b''.join(frames))
        sound_file.close() 


VoiceRecorder()